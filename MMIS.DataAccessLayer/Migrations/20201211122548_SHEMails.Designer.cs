// <auto-generated />
using System;
using MMIS.DataAccessLayer.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MMIS.DataAccessLayer.Migrations
{
    [DbContext(typeof(MMISDbContext))]
    [Migration("20201211122548_SHEMails")]
    partial class SHEMails
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Brew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaltPieceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RawMaterialSapWorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YeastBatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewingBrews");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewerShiftHandOver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BlendingPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreakDownOccurred")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cooling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaulSignalOccured")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FermentPackagingPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomingBrewer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomingShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MPVs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaltBatch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextOnline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutgoingBrewer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutgoingShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiloInUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Steam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrainingPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TankOnline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Water")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YeastBatch")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewerShiftHandOver");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingCycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrewId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCycleTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BrewingCycles");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingFermentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Age")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColdCIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FPMDeviation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FPMPresentExtract")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FermentationTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Occupancy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Taste")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingFermentation");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingPAShiftHandOver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BreakDownOccurred")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorsWalls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MPVs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaltBatch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SHEConcerns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiloInUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tanks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferLinesTOOBH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferLinesToFerment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnSafeCondtions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YeastBatch")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewingPAShiftHandOver");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("BrewerShiftHandOverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrewerShiftHandOverId");

                    b.ToTable("BrewingPlan");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingRawMatQuanties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ActualStock")
                        .HasColumnType("int");

                    b.Property<int?>("BrewingPAShiftHandOverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("GainLoss")
                        .HasColumnType("int");

                    b.Property<int>("Open")
                        .HasColumnType("int");

                    b.Property<string>("RawMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Received")
                        .HasColumnType("int");

                    b.Property<int>("Theoretical")
                        .HasColumnType("int");

                    b.Property<int>("Transfer")
                        .HasColumnType("int");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrewingPAShiftHandOverId");

                    b.ToTable("BrewingRawMatQuanties");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingTankStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("BrewingPAShiftHandOverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tank")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrewingPAShiftHandOverId");

                    b.ToTable("BrewingTankStatus");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Conversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PresentExtract")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Viscosity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingConversions");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.ConversionPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AgitatorStart")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AgitatorTipSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CIP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CIPEffectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeatControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeatingJackets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HeatingMediumTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HomogenousMash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MashTransferVelocity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RampRateTolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Safety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamplingPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TempControlTolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempControlVariation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempProbe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransferTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Vessel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VesselHeadspace")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingConversionPE");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Cooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Balling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CIP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CookerPressure")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HeatToBoil")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MashTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PostBoilHoldingTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StandTemp1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempRampRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewingCooking");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.CookingPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgitatorStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AgitatorTopSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIPEffectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Headspace")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HeatLossControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeatingJackets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HeatingMediumTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HomogenousMash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RampRateTolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Safety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamplePoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TempControlTolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempProbeAccuracy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempVariation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Vessel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingCookingPE");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.CoolTo54", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Balling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIPEffectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Calcium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExogenousEnzymes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FinalTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MashThickness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QuenchingWaterTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RampRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Vessel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingCoolTo54");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.EndMilling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MashResidenceCooker")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MashinginTemperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MashinginVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mashingintime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BrewingEndMilling");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.FermentationPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agitation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIPEffectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HeightToDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxFVDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NumberCoolingJackets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NumberTempProbes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PositionCoolingJackets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PositionTempProbes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Safety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamplePoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TempProbePA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewingFermentationPE");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.HeaderTank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AceticAcid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Agitation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Alcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BeerTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CIP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DissolvedOxygen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PresentExtract")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SamplePoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpecificGravity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Taste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TitratableAcidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Viscosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingHeaderTank");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.HeaderTankPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Accuracy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Agitation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Alcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CoolingJackets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SamplePoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TempProbes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewingHeaderTankPE");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.InProcessChecks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewingIPC");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Inspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BladesAndShaftComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BladesAndShaftStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BottomTankValveComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BottomTankValveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brewer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ByPassValveComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ByPassValveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GearboxOilLeaksComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GearboxOilLeaksStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JacketsLeaksComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JacketsLeaksStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KitchenCleanComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KitchenCleanStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastDateOfCIP")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastDateOfCIPComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainValveComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainValveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainsWaterValveComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainsWaterValveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maintenance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MashLineValveComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MashLineValveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MashStonesComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MashStonesStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoRustComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoRustStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessAttendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIFunctionalComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIFunctionalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SISecuredComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SISecuredStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaggingCoilsComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaggingCoilsStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeedComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeedOfRotationComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeedOfRotationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrainingLineValveComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrainingLineValveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwingBendComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwingBendStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValveLeaksComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValveLeaksStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterLeaksComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterLeaksStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewingInspections");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.MaltAddition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdditionTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Mass")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Temp")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingMaltAddition");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.MillEnd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CrushConsistency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EMId")
                        .HasColumnType("int");

                    b.Property<decimal>("GistComposition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GristResidence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InsectInfestation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MillPlantCF")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EMId");

                    b.ToTable("MillEnd");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.MillStart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdjunctMassMaizeBuffer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CIP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mashingtime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MouldGrowth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreingMagnetCF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SMId")
                        .HasColumnType("int");

                    b.Property<decimal>("Samplingvalve")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Throughput")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SMId");

                    b.ToTable("MillStart");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BCId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EndTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("StartTemp")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BCId");

                    b.ToTable("BrewingProcesses");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.StandardCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Alcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Brix")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IPCId")
                        .HasColumnType("int");

                    b.Property<decimal>("PH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Viscosity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IPCId");

                    b.ToTable("BrewingStdChecks");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.StartMilling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdjunctMassRedSorghum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MashVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MashliquorTemperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BrewingStartMilling");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Stocks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrewId")
                        .HasColumnType("int");

                    b.Property<decimal>("ClosingStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OpeningStock")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrewId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Stoppage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BCId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BCId");

                    b.ToTable("BrewingStoppages");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Strain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIPEffectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DecanterCIP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Safety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpentGrainsMass")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpentGrainsMoisture")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StrainingTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Throughput")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalStrainingTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VibroScreenSize")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingStrain");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.SuperBBT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BeerAges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeerLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeerTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BlendVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BlendingTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TTTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BrewingSuperBBT");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Vibro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MicrobiologicalControl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PostBeerTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriorBeerTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VibroScreenCIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingVibro");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.VibroPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIPEffectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Safety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StrainingTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Throughput")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VibroScreenSize")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingVibroPE");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.WortCooling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CollectedWortTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CoolingRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CoolingTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HWMnHECIP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MicrobiologicalContent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PresentExtract")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpecificGravity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TitratableAcidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSolids")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Viscosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WortPH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingWortCooling");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.WortCoolingPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIPEffectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CoolingCoils")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FlowMeterAccuracy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Safety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamplePoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Velocity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WaterTemp")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BrewingWortCoolingPE");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.YeastHandling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdditionPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BrewNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfReceipt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxStorageTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PitchingRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StorageTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Strain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrewingYeastHandling");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Plants.Plant", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LagersTerritory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionMain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SorghumRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SorghumTerritory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "PlantId");

                    b.ToTable("PlantData");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.CMArtisanInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artisan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'ID' + cast([Id] as varchar)");

                    b.Property<string>("Issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WoNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("completion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("duration")
                        .HasColumnType("float");

                    b.Property<double>("sparesCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CMArtisanInput");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.CMPlannerInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'ID' + cast([Id] as varchar)");

                    b.Property<string>("Issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WoNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("byWhen")
                        .HasColumnType("datetime2");

                    b.Property<string>("byWho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("planner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CMPlannerInput");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.DIArtisanInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artisan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'ID' + cast([Id] as varchar)");

                    b.Property<DateTime>("IdentifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DIArtisanInput");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.DIPlannerInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ByWhen")
                        .HasColumnType("datetime2");

                    b.Property<string>("ByWho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'ID' + cast([Id] as varchar)");

                    b.Property<string>("Issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Planner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DIPlannerInput");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.EndShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ShiftEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("beerloss")
                        .HasColumnType("float");

                    b.Property<double>("carbondioxide")
                        .HasColumnType("float");

                    b.Property<double>("closure")
                        .HasColumnType("float");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("glue")
                        .HasColumnType("float");

                    b.Property<double>("label")
                        .HasColumnType("float");

                    b.Property<double>("preform")
                        .HasColumnType("float");

                    b.Property<double>("shrinkwrap")
                        .HasColumnType("float");

                    b.Property<double>("stretchwrap")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ShiftEnd");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.Inspections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TargetDuration")
                        .HasColumnType("float");

                    b.Property<string>("WODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WOLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WONumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.Lines", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineGroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LineRating")
                        .HasColumnType("float");

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "LineId");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.LossWasteFaults", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FaultNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'FN' + cast([Id] as varchar)");

                    b.Property<int?>("LWHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("LWId")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'LW' + cast([LWHeaderId] as varchar)");

                    b.Property<string>("Level1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LostTime")
                        .HasColumnType("float");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LWHeaderId");

                    b.ToTable("LossWasteFaults");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.LossWasteHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<double>("HourlyTPV")
                        .HasColumnType("float");

                    b.Property<string>("LWId")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'LW' + cast([Id] as varchar)");

                    b.Property<string>("LineStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LostTime")
                        .HasColumnType("float");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportingLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEntered")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LossWasteHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.LossWasteJobCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("FaultId")
                        .HasColumnType("int");

                    b.Property<string>("FaultNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'FN' + cast([FaultId] as varchar)");

                    b.Property<string>("JobCardNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'JN' + cast([Id] as varchar)");

                    b.Property<DateTime>("TargetCompTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WONumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FaultId")
                        .IsUnique();

                    b.ToTable("LossWasteJobCard");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.PIMsPOMShrinkPacker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BarCompressorPressure")
                        .HasColumnType("float");

                    b.Property<double>("BladeCutting")
                        .HasColumnType("float");

                    b.Property<double>("CasesProduced")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("ElectricalCabinets")
                        .HasColumnType("float");

                    b.Property<double>("NoCasesRejected")
                        .HasColumnType("float");

                    b.Property<double>("OvenTemperature")
                        .HasColumnType("float");

                    b.Property<double>("SensorPositioning")
                        .HasColumnType("float");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ShrinkpackerMachineSpeedLine2")
                        .HasColumnType("float");

                    b.Property<double>("ShrinkpackerMachineSpeedLine3")
                        .HasColumnType("float");

                    b.Property<double>("SkewedPacks")
                        .HasColumnType("float");

                    b.Property<double>("UnevenEyes")
                        .HasColumnType("float");

                    b.Property<double>("UnwrappedBottles")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PIMsPOMShrinkPacker");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.PIMsPOMs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UoM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PIMsPOMs");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.PIMsPOMsBlowMoulder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AirPressure")
                        .HasColumnType("float");

                    b.Property<double>("AmbientRoomTemp")
                        .HasColumnType("float");

                    b.Property<double>("BlowingPressure")
                        .HasColumnType("float");

                    b.Property<double>("BottleChecksDone")
                        .HasColumnType("float");

                    b.Property<double>("ChillerOutTemp")
                        .HasColumnType("float");

                    b.Property<double>("ChillerWaterLevel")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("IncomingBarPressure")
                        .HasColumnType("float");

                    b.Property<string>("LampStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NoAirLeaks")
                        .HasColumnType("float");

                    b.Property<double>("NoPreformsIn")
                        .HasColumnType("float");

                    b.Property<double>("NoPreformsOut")
                        .HasColumnType("float");

                    b.Property<double>("NoPreformsRejected")
                        .HasColumnType("float");

                    b.Property<double>("NoWaterLeaks")
                        .HasColumnType("float");

                    b.Property<double>("OvenTemp")
                        .HasColumnType("float");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PIMsPOMsBlowMoulder");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.PIMsPOMsCompressor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BarCompressorPressure")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("FirstStagePressure")
                        .HasColumnType("float");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UoM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PIMsPOMsCompressor");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.PIMsPOMsFiller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AirControlPressure")
                        .HasColumnType("float");

                    b.Property<double>("BottleNeckRinser")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("FillerBeerTemperature")
                        .HasColumnType("float");

                    b.Property<double>("FillerBowlCounterPressure")
                        .HasColumnType("float");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PIMsPOMsFiller");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.PIMsPOMsPasteurizer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BeerViscosity")
                        .HasColumnType("float");

                    b.Property<double>("BufferLevel")
                        .HasColumnType("float");

                    b.Property<double>("Co2InBottle")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("IncomingCo2Pressure")
                        .HasColumnType("float");

                    b.Property<double>("IncomingGlycolTemperature")
                        .HasColumnType("float");

                    b.Property<double>("IncomingSteamPressure")
                        .HasColumnType("float");

                    b.Property<double>("PasterisationUnits")
                        .HasColumnType("float");

                    b.Property<double>("PasteuriserBeerTemperature")
                        .HasColumnType("float");

                    b.Property<double>("PasteurisingTemperatures")
                        .HasColumnType("float");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Torques")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PIMsPOMsPasteurizer");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.PIMsPOMsRobobox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("LayerpadQuality")
                        .HasColumnType("float");

                    b.Property<double>("NoPalletsReworked")
                        .HasColumnType("float");

                    b.Property<double>("PalletiserAirPressure")
                        .HasColumnType("float");

                    b.Property<double>("PalletsOnPalletMagazine")
                        .HasColumnType("float");

                    b.Property<double>("PalletsProduced")
                        .HasColumnType("float");

                    b.Property<double>("RoboboxMachineSpeed")
                        .HasColumnType("float");

                    b.Property<string>("ShiftNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StretchAirPressure")
                        .HasColumnType("float");

                    b.Property<double>("StretchWrapperTemperature")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PIMsPOMsRobobox");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.ProductionTimes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<double>("PaidFactoryHours")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ProductionTimes");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.Resources", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ResCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.ShiftAttendence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'SH' + cast([shiftHeaderId] as varchar)");

                    b.Property<string>("TimeIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("shiftHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("shiftHeaderId");

                    b.ToTable("ShiftAttendence");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.ShiftHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChangedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("format(GETDATE(),'dddd, dd MMMM yyyy h:mm tt')");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportingLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShiftEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftGroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'SH' + cast([Id] as varchar)");

                    b.Property<DateTime>("ShiftStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<double>("TargetVolume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ShiftHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.ShiftMeetingActions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingID")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'MT' + cast([shiftHeaderId] as varchar)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'SH' + cast([shiftHeaderId] as varchar)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'TAS' + cast([Id] as varchar)");

                    b.Property<int?>("shiftHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("shiftHeaderId");

                    b.ToTable("ShiftMeetingActionItems");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.ShiftStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShiftStatus");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.Shifts", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ShiftId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserGroupId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "ShiftId");

                    b.ToTable("ShiftMaster");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Users.Operators", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("OperatorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperatorGroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "OperatorId");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Users.TeamLeaders", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("TeamLeaderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamLeaderGroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamLeaderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "TeamLeaderId");

                    b.ToTable("TeamLeaders");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserTypeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsergroupID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Users.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UserGroupID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "UserGroupID");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Users.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "RoleId", "RoleTypeId");

                    b.ToTable("UserRoleMaster");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Users.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRolesId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "UserName");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Users.UserType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UserTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("userType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "UserTypeId");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Alcolyser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlcoholAdjustment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreCalibration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Water")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WaterandAirAdjustment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CId");

                    b.ToTable("Alcolyser");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Boiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Chlorides")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Conductivity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hardness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MAlk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OHAlk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PAlk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TDS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UIdId")
                        .HasColumnType("int");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sulphites")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UIdId");

                    b.ToTable("QualityUtilitiesBoiler");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.BulkWater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hardness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TDS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Taintnetting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Turbidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QualityBulkWater");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.CIPTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CleaningAdherance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DetergentStrength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DetergentTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Deviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HotWaterTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Microbiologist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NBB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NBB_B")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PCA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhenopthaleinTest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QAAnalyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SDM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TeamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WLN")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QualityCIPTracker");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Calibrations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShiftStartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("QualityCalibrations");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.CarbonDioxideRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApperanceInWater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Odour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdourAfterAcidification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SnowTest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taste")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRICarbonDioxide");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.ClosureRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Diameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mass")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Printing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Sample")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperEvidenceBand")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIClosure");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Condenser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Alc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TDS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UIdId")
                        .HasColumnType("int");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UIdId");

                    b.ToTable("QualityUtilitiesCondenser");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.CoolingTower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Alc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TDS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UIdId")
                        .HasColumnType("int");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UIdId");

                    b.ToTable("QualityUtilitiesCTMPV");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.CustomerComplaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BBDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ByWhen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ByWho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Confirmation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectiveActions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateofCompaint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Driver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("NatureOfComplaint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RootCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityCustomerComplaint");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Effluent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("COD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TSS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UIdId")
                        .HasColumnType("int");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UIdId");

                    b.ToTable("Effluent");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.FParameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("Alcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Brix")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FIdId")
                        .HasColumnType("int");

                    b.Property<decimal>("OE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RDF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ref")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Temp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAcid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Viscosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FIdId");

                    b.ToTable("QualityFParameters");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.FParametersScud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("Alcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FIdId")
                        .HasColumnType("int");

                    b.Property<decimal>("Head")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ref")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Settling")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TRS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Taste")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAcid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Viscosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FIdId");

                    b.ToTable("FParametersScud");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Fermentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrewNo")
                        .HasColumnType("int");

                    b.Property<decimal>("BrixAtWort")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaltBatch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YeastBatch")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityFermentation");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.GlueRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BucketCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BucketSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<string>("GlueCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIGlue");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.LabelRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Layout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Overlap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Separation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spikes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRILabel");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.LacticAcidRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Strength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRILacticAcid");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.MaizeRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Chipped")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Defective")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExtraMatter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Extract")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Moisture")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SiloOffloadedInto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalDensity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Trash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TruckNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WeevilsInfestationDead")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeevilsInfestationLive")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIMaize");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.MaltRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfManufacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Extract")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FreeAminoNitrogen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaltActivity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Moisture")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SDU")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SandDetection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Solubility")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TBC")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIMalt");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.MarketDispatched", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BBDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Driver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityMarketDispatched");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PHMeter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BufferpH10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BufferpH4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BufferpH7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElectrodeCleaning")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CId");

                    b.ToTable("PHMeter");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPBadClosures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dimensions")
                        .HasColumnType("int");

                    b.Property<int>("Flashes")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int?>("PIPId")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShortMoulds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PIPId");

                    b.ToTable("PIPBadClosures");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPBrew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrewNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PIPId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PIPId");

                    b.ToTable("QualityPIPBrew");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPBrewScud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrewNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PIPId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PIPId");

                    b.ToTable("PIPBrewScud");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPDamagedBottles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrokenBottles")
                        .HasColumnType("int");

                    b.Property<int>("ChippedNeck")
                        .HasColumnType("int");

                    b.Property<int>("FirtyBottles")
                        .HasColumnType("int");

                    b.Property<int>("ForeignBodies")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int?>("PIPId")
                        .HasColumnType("int");

                    b.Property<int>("RodentDamaged")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PIPId");

                    b.ToTable("PIPDamagedBottles");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPMaterials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PIPId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PIPId");

                    b.ToTable("QualityPIPMaterial");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPMaterialsScud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PIPId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PIPId");

                    b.ToTable("PIPMaterialsScud");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PackagingInProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlcoholContent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BestBeforeDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Brix")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CO2content")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfPacking")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InpackViscosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IntankViscosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PackaginGage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Torque")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAcids")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QualityPIP");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PackagingInProgressScud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BestBeforeDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BottleCleanliness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CrateCleanliness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfPacking")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DetergentDosageBW")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DetergentDosageCW")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FillVolumes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PHBottleWasher")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PHCrateWasher")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercentCapped")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TCBottleWasher")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TCCrateWasher")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAcids")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Viscosity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QualityPIPScud");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Params", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LCL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Target")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UCL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Variable")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityParams");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PostChlorination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Chlorine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Taintnetting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Turbidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WaterId");

                    b.ToTable("PostChlorination");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PostSandFiltration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Malkalinity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Palkalinity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TDS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Taintnetting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Turbidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WaterId")
                        .HasColumnType("int");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("WaterId");

                    b.ToTable("PostSandFiltration");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PreformRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalDiameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinishGoGauge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalDiameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Sample")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Visual")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIPreform");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.RawWater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Malkalinity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Palkalinity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TDS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Taintnetting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Turbidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WaterId")
                        .HasColumnType("int");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("WaterId");

                    b.ToTable("RawWater");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Refractometer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CId")
                        .HasColumnType("int");

                    b.Property<decimal>("Calibration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cleaning")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CId");

                    b.ToTable("Refractometer");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Refridgeration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("FreezingPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GlycolStrength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UIdId");

                    b.ToTable("QualityUtilitiesRefridgeration");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.SLParameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlcoholContent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CO2Content")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int?>("SLId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAcids")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SLId");

                    b.ToTable("QualitySLParameters");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.ScudBottleRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Bottleridgediameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CavityNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Mass")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NODNThread")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NODPThread")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NODRatchettoratchet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Neck")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NeckInsidediameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Neckheightratchet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("RatchetHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalBottleHeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIScudBottle");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.ScudClosureRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BandHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BandOutsideDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CavityNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClosureBottleGrip")
                        .HasColumnType("int");

                    b.Property<int>("ClosureBottlefit")
                        .HasColumnType("int");

                    b.Property<int>("Colour")
                        .HasColumnType("int");

                    b.Property<int>("ColourDispersion")
                        .HasColumnType("int");

                    b.Property<int>("Contaminants")
                        .HasColumnType("int");

                    b.Property<int>("Cracks")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dating")
                        .HasColumnType("int");

                    b.Property<int>("DropTest")
                        .HasColumnType("int");

                    b.Property<int>("Embossing")
                        .HasColumnType("int");

                    b.Property<decimal>("FeatheringExternalDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InsideDiameterToFeathering")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Leaktest")
                        .HasColumnType("int");

                    b.Property<decimal>("Mass")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OutsideDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SlitSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalClosureHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalInsideDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Trimming")
                        .HasColumnType("int");

                    b.Property<string>("VisualInspection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("symmetry")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QualityRIScudClosure");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Shelflife", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityShelflife");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.ShrinkfilmRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeDiameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeShape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gauge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReelCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIShrinkfilm");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.StretchfilmRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeDiameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeShape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gauge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReelCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIStretchfilm");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.TasteTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BBDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TasteDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("QualityTasteTest");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Tester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlcoholContent")
                        .HasColumnType("int");

                    b.Property<int>("Alkaline")
                        .HasColumnType("int");

                    b.Property<int>("Bite")
                        .HasColumnType("int");

                    b.Property<int>("Carbonation")
                        .HasColumnType("int");

                    b.Property<int>("Chlorophenol")
                        .HasColumnType("int");

                    b.Property<int>("Colour")
                        .HasColumnType("int");

                    b.Property<int>("Cracking")
                        .HasColumnType("int");

                    b.Property<int>("Earthy")
                        .HasColumnType("int");

                    b.Property<int>("Metallic")
                        .HasColumnType("int");

                    b.Property<int>("Mouthfeel")
                        .HasColumnType("int");

                    b.Property<int>("Musty")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int>("Phenolic")
                        .HasColumnType("int");

                    b.Property<int>("RancidOil")
                        .HasColumnType("int");

                    b.Property<int>("Sliminess")
                        .HasColumnType("int");

                    b.Property<int>("SourAcetic")
                        .HasColumnType("int");

                    b.Property<int>("Sulphury")
                        .HasColumnType("int");

                    b.Property<int>("Sweetness")
                        .HasColumnType("int");

                    b.Property<int?>("TTId")
                        .HasColumnType("int");

                    b.Property<int>("TesterNo")
                        .HasColumnType("int");

                    b.Property<int>("Texture")
                        .HasColumnType("int");

                    b.Property<int>("Thickness")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TTId");

                    b.ToTable("Tester");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.TreatedWater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Chloride")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Conductivity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Malkalinity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Residualchlorine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TDS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Taintnetting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Taste")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Totalhardness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Turbidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WaterId")
                        .HasColumnType("int");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sulphate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("WaterId");

                    b.ToTable("TreatedWater");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Utilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilities");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.VUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Empty")
                        .HasColumnType("bit");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastCIP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityVUsage");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Vessel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Hardness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TDS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UIdId")
                        .HasColumnType("int");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UIdId");

                    b.ToTable("QualityUtilitiesSoftner");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Viscometer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CId")
                        .HasColumnType("int");

                    b.Property<string>("SpindleCleaning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ViscometerStandard100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ViscometerStandard500")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CId");

                    b.ToTable("Viscometer");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Water", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityWaterTreatment");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.WaterTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Chlorides")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaintNetting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TreatedWaterHaze")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UIdId");

                    b.ToTable("QualityUtilitiesWT");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Wort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrewNo")
                        .HasColumnType("int");

                    b.Property<decimal>("Brix")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MPV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaizeSilo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaltBatch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RDF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ref")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpentGrainMoisture")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAcids")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Viscosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("YeastBatch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("pH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QualityWort");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.YeastRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlcoholProduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Analyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BestBeforeDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coliforms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<string>("EColi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoamFormation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lactobacillus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiveCellCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoistureContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShelfLife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalBacteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Viability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WildYeast")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QualityRIYeast");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.AffectedBodyPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BodyPart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentLoggingId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentLoggingId");

                    b.ToTable("AffectedBodyPart");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Appointments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AppointmentLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeementStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.AuditRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditDue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuditScore")
                        .HasColumnType("float");

                    b.Property<string>("Auditee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Auditor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditRecords");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.ChangeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionSteps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ActualResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeInitiator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeReasonOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeRequiremenets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeSponsor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeTypeOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostImpact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDubmitted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionOfBusinessProblem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Escalation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalResolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpactOfNoChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendationNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedCompletionDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceImpact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemBehaviour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleOfChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChangeRequest");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.ChemicalCompatibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AverageHumidity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChemicalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosureStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompatibilityStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Corrosive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flammable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hazard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RouteOfExposure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Toxic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("msds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recommendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responsibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChemicalCompatibility");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.CommunicationPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CommunicationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Communicator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedBackChannel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initiator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeOfCommunication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhenToCommunicate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommunicationPlan");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.ConfinedSpaces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ContinuousOccupancy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAccessed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReviewed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LargeEnough")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfEntryPoints")
                        .HasColumnType("int");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotentialHazards")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pwt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestrictedAccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriousHazards")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConfinedSpaces");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentLoggingId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentLoggingId");

                    b.ToTable("IncidentDocuments");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalImpactControls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnvironmentalImpactRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalImpactRAHeaderId");

                    b.ToTable("EnvironmentalImpactControls");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalImpactRAHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AspectInvolved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociatedImpact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Center")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Condition")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Impact")
                        .HasColumnType("int");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.Property<int>("ResidualImpact")
                        .HasColumnType("int");

                    b.Property<int>("ResidualProbability")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnvironmentalImpactRAHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalImpactRequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnvironmentalImpactRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalImpactRAHeaderId");

                    b.ToTable("EnvironmentalImpactRequirements");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalIncident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuthoritiesInvolved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthoritiesInvolvedDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BehaviorExplanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrisisTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrisisTeamDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateTimeOfIncident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionOfIncident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationOfShutdown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentInvolved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityStoppage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanBehavior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmediateActions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpactOnEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpactOnEnvironmentOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentClassification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvestigationStarted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaCoverage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NaturalDisaster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PsmRecordableIncident")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnvironmentalIncident");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalIncidentDeviationFromVpo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnvironmentalIncidentInvestigationId")
                        .HasColumnType("int");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalIncidentInvestigationId");

                    b.ToTable("EnvironmentalIncidentDeviationFromVpo");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalIncidentInvestigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AgencyNotification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaInvolvement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipmentFailure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalNotification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalIncidentClassification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HazMatDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HazMatLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HazMatReasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HazMatTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HazmatActions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpactOnDailyOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentviolationOfVpo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KpiImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonComplianceClosed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationToAuthorities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationToAuthoritiesDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermitExcursion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseBeyondFacility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseBeyondFacilityDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootCauseFailureAnalysis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViolationOfLegalRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViolationOfVpoOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VpoIdentified")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnvironmentalIncidentInvestigation");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalIncidentMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnvironmentalIncidentId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalIncidentId");

                    b.ToTable("EnvironmentalIncidentMedia");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.FRAControls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Measure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsiblePerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FRAHeaderId");

                    b.ToTable("FRAControls");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.FRAEquipments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FRAHeaderId");

                    b.ToTable("FRAEquipments");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.FRAHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AssociatedRisks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Exposure")
                        .HasColumnType("int");

                    b.Property<string>("FireHazard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnitionSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfExposedPeople")
                        .HasColumnType("int");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidualProbability")
                        .HasColumnType("int");

                    b.Property<int>("ResidualRiskScore")
                        .HasColumnType("int");

                    b.Property<int>("RiskScore")
                        .HasColumnType("int");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<int>("probability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FRAHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.FRARequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FRAHeaderId");

                    b.ToTable("FRARequirements");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAAffectedPersons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectedPersons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRAAffectedPersons");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAAssociatedRisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Risk")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRAAssociatedRisk");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRAClassification");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAControls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRAControls");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAEmergencyAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emergency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRAEmergencyAction");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAExposureRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exposure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRAExposureRoute");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAHandlingControls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRAHandlingControls");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AirMonitoringConsidered")
                        .HasColumnType("bit");

                    b.Property<string>("Center")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CurrentControlEffective")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfSDS")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExposurePeriod")
                        .HasColumnType("int");

                    b.Property<string>("Eyes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inhalation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LessDangerousSubConsidered")
                        .HasColumnType("bit");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaxTemperature")
                        .HasColumnType("float");

                    b.Property<string>("OveralUasgeAssement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProcessReengineered")
                        .HasColumnType("bit");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("QuantitiesUsed")
                        .HasColumnType("float");

                    b.Property<string>("SDSHeld")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SDsControlsNotInPlace")
                        .HasColumnType("bit");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HRAHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAImprovementSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Suggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRAImprovementSuggestion");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRARequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRARequirements");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRASubstancesProduced", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Substance")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HRAHeaderId");

                    b.ToTable("HRASubstancesProduced");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HeightWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HeightWork");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HighRiskTaskObservationRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateObserved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Departmentd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designationd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonObserved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForObservationd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SopNumberd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SopTitled")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HighRiskTaskObservationRecords");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HzSubstancesInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CorrectMSDS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dangerous")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hazardous")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxQuantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HzSubstancesInventory");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentCauses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DpoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmediateCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndividualsInvolved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Methods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VpoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentCauses");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentCorrectiveMeasures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentCorrectiveMeasures");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentDocumentDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentDocumentDescription");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentImmediateCauseConditions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentCausesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncidentCausesId");

                    b.ToTable("IncidentImmediateCauseConditions");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EorrectTools")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentInvolved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentMaintenance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentOccurrence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentOccurrencePeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentPeriodPrior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KpiReportable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherPertinentInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonTrained")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedureIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recordable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SimilarSituations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartUpPhase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskBeingDoneAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskBeingDoneObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskDoneBefore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskFrequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhyWorkContinued")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPermits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WrittenProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentInvestigation");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigationDoneDifferent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentInvestigationId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Step")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentInvestigationId");

                    b.ToTable("IncidentInvestigationDoneDifferent");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigationPPEList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentInvestigationId")
                        .HasColumnType("int");

                    b.Property<string>("Ppe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentInvestigationId");

                    b.ToTable("IncidentInvestigationPPEList");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigationSteps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentInvestigationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StepDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StepDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentInvestigationId");

                    b.ToTable("IncidentInvestigationSteps");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigationToolCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentInvestigationId")
                        .HasColumnType("int");

                    b.Property<string>("Tool")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentInvestigationId");

                    b.ToTable("IncidentInvestigationToolCondition");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentLogging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("AmountOfFines")
                        .HasColumnType("float");

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeOcurred")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeReported")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentAssignedToNon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentWhereOcurred")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityWhereIncidentOcurred")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinesCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentCause")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentNumber")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'IRX' + cast([Id] as varchar)");

                    b.Property<string>("IncidentResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentResultOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentSubCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InjuryClassification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InjuryOnCompanyBusiness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InjuryWhileCommuting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalAuthorities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaInvolvement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegulatoryAgency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegulatoryAgencyInvolved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegulatoryFines")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StepsToPreventIncident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleRelated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentLogging");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentRootCauseActions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentCausesId")
                        .HasColumnType("int");

                    b.Property<string>("RootCause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentCausesId");

                    b.ToTable("IncidentRootCauseActions");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentRootCauseConditions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentCausesId")
                        .HasColumnType("int");

                    b.Property<string>("RootCauseCondition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentCausesId");

                    b.ToTable("IncidentRootCauseConditions");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("IcidentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentTypes");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentVehicleInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccidentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Authorized")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyVehicle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfExpiration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfLastDefensive")
                        .HasColumnType("datetime2");

                    b.Property<string>("Distracted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastInspection")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseTypeOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maintenance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfOccupants")
                        .HasColumnType("int");

                    b.Property<string>("OccupantOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupantTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoadConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RollOver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SafeDrivingPractices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatBeltsUsed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatsAvailable")
                        .HasColumnType("int");

                    b.Property<string>("SpeedLimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateOfIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravellingSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfCar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfCarOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeatherConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WithinHoursOfService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfVehicle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentVehicleInformation");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentWhys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentCausesId")
                        .HasColumnType("int");

                    b.Property<string>("Why")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentCausesId");

                    b.ToTable("IncidentWhys");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.InductionInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfInduction")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InductionDoneBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departmentAssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InductionInventory");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.InductionInventoryContractors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfInduction")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfMeedicalExamination")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentAssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expiry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InductionDoneBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InductionInventoryContractors");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.InductionRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateToSupervisor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("HODApproval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hazards")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InductionRequestFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InductionRequestTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NoOfInductees")
                        .HasColumnType("float");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SheReceivedBY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkstationLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InductionRequest");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IssueBasedRAAuthorisations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'IBRA' + cast([IssueBasedRAHeaderId] as varchar)");

                    b.Property<bool>("HOD")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueBasedRAHeaderId")
                        .HasColumnType("int");

                    b.Property<bool>("SHEManager")
                        .HasColumnType("bit");

                    b.Property<bool>("SHEOfficer")
                        .HasColumnType("bit");

                    b.Property<bool>("Supervisor")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IssueBasedRAHeaderId");

                    b.ToTable("IssueBasedRAAuthorisations");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IssueBasedRAHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssessmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'IBRA' + cast([Id] as varchar)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IssueBasedRAHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IssueBasedRAItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'IBRA' + cast([IssueBasedRAHeaderId] as varchar)");

                    b.Property<string>("ExistingMeasures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IssueBasedRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("PotentialHazard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreventionMeasures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TargetCompletion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IssueBasedRAHeaderId");

                    b.ToTable("IssueBasedRAItems");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IssueBasedRAMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'IBRA' + cast([IssueBasedRAHeaderId] as varchar)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IssueBasedRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IssueBasedRAHeaderId");

                    b.ToTable("IssueBasedRAMembers");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InductionRequestId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InductionRequestId");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.LegalOtherHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Center")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LegalOtherHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.LegalOtherRequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComplainceMechanism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LegalOtherHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibility")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LegalOtherHeaderId");

                    b.ToTable("LegalOtherRequirements");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.MedicalData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedicalData");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Medicals", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DaysLeft")
                        .HasColumnType("int");

                    b.Property<long?>("MedicalDataId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MedicalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MedicalDue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicalDataId");

                    b.ToTable("Medicals");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.MonitoringPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentRetentionPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NosaElement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsiblePerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SapScheduleNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("cost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MonitoringPlan");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.NatureOfIllness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Illness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentLoggingId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentLoggingId");

                    b.ToTable("IncidentNatureOfIllness");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.OccupationalControls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OccupationalHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("ResponsiblePerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OccupationalHeaderId");

                    b.ToTable("OccupationalControls");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.OccupationalHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AssociatedRisk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Hazard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoursExposed")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeasuredOEL")
                        .HasColumnType("int");

                    b.Property<int>("NoOfPeopleExposed")
                        .HasColumnType("int");

                    b.Property<int>("NoOfShifts")
                        .HasColumnType("int");

                    b.Property<string>("OperationalCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.Property<int>("RequiredOEL")
                        .HasColumnType("int");

                    b.Property<int>("ResidualFrequency")
                        .HasColumnType("int");

                    b.Property<int>("ResidualNoOfExposedPeople")
                        .HasColumnType("int");

                    b.Property<int>("ResidualProbability")
                        .HasColumnType("int");

                    b.Property<int>("ResidualRiskScore")
                        .HasColumnType("int");

                    b.Property<int>("RiskScore")
                        .HasColumnType("int");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OccupationalHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.OccupationalRequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OccupationalHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OccupationalHeaderId");

                    b.ToTable("OccupationalRequirements");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PermitsAndLicenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AntiCorruptionTraining")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmployee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CostOfLicense")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<double>("FinesLevied")
                        .HasColumnType("float");

                    b.Property<string>("FrequencyOfRenewal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intermediary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntermediaryFeeStructure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntermediaryInvolved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntermediaryRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenceRequired")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeOfPayment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sbu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereLicenseObtained")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PermitsAndLicenses");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("FaceMask")
                        .HasColumnType("bit");

                    b.Property<bool>("FaceShield")
                        .HasColumnType("bit");

                    b.Property<string>("FormId")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'PRA' + cast([PreTaskRAHeaderId] as varchar)");

                    b.Property<bool>("Gloves")
                        .HasColumnType("bit");

                    b.Property<bool>("Goggles")
                        .HasColumnType("bit");

                    b.Property<bool>("Harness")
                        .HasColumnType("bit");

                    b.Property<bool>("Headphones")
                        .HasColumnType("bit");

                    b.Property<bool>("Helmet")
                        .HasColumnType("bit");

                    b.Property<bool>("Overalls")
                        .HasColumnType("bit");

                    b.Property<int?>("PreTaskRAHeaderId")
                        .HasColumnType("int");

                    b.Property<bool>("Respirator")
                        .HasColumnType("bit");

                    b.Property<bool>("SafetyShoes")
                        .HasColumnType("bit");

                    b.Property<bool>("Vest")
                        .HasColumnType("bit");

                    b.Property<bool>("WeldingMask")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PreTaskRAHeaderId");

                    b.ToTable("PreTaskRAEquipment");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAHazards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormId")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'PRA' + cast([PreTaskRAHeaderId] as varchar)");

                    b.Property<string>("Hazard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HazardNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'HN' + cast([Id] as varchar)");

                    b.Property<int?>("PreTaskRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PreTaskRAHeaderId");

                    b.ToTable("PreTaskRAHazards");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Competence")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormId")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'PRA' + cast([Id] as varchar)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("headOfDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sheManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sheOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supervisor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreTaskRAHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Competence")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormId")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'PRA' + cast([PreTaskRAHeaderId] as varchar)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'MN' + cast([Id] as varchar)");

                    b.Property<int?>("PreTaskRAHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PreTaskRAHeaderId");

                    b.ToTable("PreTaskRAMembers");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAPermisions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FormId")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'PRA' + cast([PreTaskRAHeaderId] as varchar)");

                    b.Property<bool>("HotWork")
                        .HasColumnType("bit");

                    b.Property<bool>("LockOutTag")
                        .HasColumnType("bit");

                    b.Property<string>("PermissionNo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("+ 'PN' + cast([Id] as varchar)");

                    b.Property<int?>("PreTaskRAHeaderId")
                        .HasColumnType("int");

                    b.Property<bool>("RoofWork")
                        .HasColumnType("bit");

                    b.Property<bool>("ScaffoldingWork")
                        .HasColumnType("bit");

                    b.Property<bool>("WorkAtHeight")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PreTaskRAHeaderId");

                    b.ToTable("PreTaskRAPermisions");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.RATeams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Centre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HRATeams");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SDParameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParameterLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SustainableDevelopmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SustainableDevelopmentId");

                    b.ToTable("SDParameters");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SHEMails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SHEMails");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SHERegistry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AppointmentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Center")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrainingDue")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SHERegistry");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SHETargetItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SHETargetsHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SHETargetsHeaderId");

                    b.ToTable("SHETargetItems");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SHETargetsHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionPlan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Indicators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Programme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resources")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TargetEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TargetStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SHETargetsHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SRAControls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Measure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SRAHeaderId");

                    b.ToTable("SRAControls");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SRAHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AssociatedRisk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Condition")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HazardInvolved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidualProbability")
                        .HasColumnType("int");

                    b.Property<int>("ResidualRiskScore")
                        .HasColumnType("int");

                    b.Property<int>("RiskScore")
                        .HasColumnType("int");

                    b.Property<string>("SRAType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Tasks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("probability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SRAHeader");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SRARequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SRAHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SRAHeaderId");

                    b.ToTable("SRARequirements");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SafeWorkMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CommunicationProcedure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContracterResponsible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorSiteApproval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EngineeringManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EngineeringManagerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonForSWMS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagerApproval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ResponsibleManagerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SafeWorkMethod");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Suggestions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClosureStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstimatedCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExplanationOfSuggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfSuggestor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewerAdditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskExplanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskOtherExplanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("benefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("risk")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suggestions");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SupplierEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuditFindings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopingArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalScore")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SupplierEvaluation");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Suppliers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EvaluationScore")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SustainableDevelopment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SustainableDevelopment");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SwmsTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SafeWorkMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SafeWorkMethodId");

                    b.ToTable("SwmsTeam");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SystemDocumentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssueNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemDocumentation");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.TasksInvolved", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Responsibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SafeWorkMethodId")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SafeWorkMethodId");

                    b.ToTable("TasksInvolved");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.TrainingMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Center")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingMatrix");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.TrainingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("NonfinancialResourcesRequired")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetTraining")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingCycle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingOrganisation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingPlan");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Trainings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTrained")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetrainingDaysLeft")
                        .HasColumnType("int");

                    b.Property<DateTime>("RetrainingDue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrainingMatrixId")
                        .HasColumnType("int");

                    b.Property<string>("TrainingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrainingMatrixId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.WasteManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteClassification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("disposalSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("generalWaste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hazardousWaste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wasteFormat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wasteIdentified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wasteManagement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wastePosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wasteType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WasteManagement");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.WasteTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCollected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisposalCost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisposalSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellingPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("collector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("waste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WasteTracking");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Witnesses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidentLoggingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WitnessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WitnessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WitnessPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentLoggingId");

                    b.ToTable("IncidentWitnesses");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingPlan", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.BrewerShiftHandOver", "BrewerShiftHandOver")
                        .WithMany("BrewingPlan")
                        .HasForeignKey("BrewerShiftHandOverId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingRawMatQuanties", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.BrewingPAShiftHandOver", "BrewingPAShiftHandOver")
                        .WithMany("BrewingRawMatQuanties")
                        .HasForeignKey("BrewingPAShiftHandOverId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.BrewingTankStatus", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.BrewingPAShiftHandOver", "BrewingPAShiftHandOver")
                        .WithMany("BrewingTankStatus")
                        .HasForeignKey("BrewingPAShiftHandOverId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.MillEnd", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.EndMilling", "EM")
                        .WithMany("Mills")
                        .HasForeignKey("EMId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.MillStart", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.StartMilling", "SM")
                        .WithMany("Mills")
                        .HasForeignKey("SMId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Process", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.BrewingCycle", "BC")
                        .WithMany("Processes")
                        .HasForeignKey("BCId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.StandardCheck", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.InProcessChecks", "IPC")
                        .WithMany("StandardChecks")
                        .HasForeignKey("IPCId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Stocks", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.Brew", "Brew")
                        .WithMany("Stocks")
                        .HasForeignKey("BrewId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Brewing.Entities.Stoppage", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Brewing.Entities.BrewingCycle", "BC")
                        .WithMany("Stoppages")
                        .HasForeignKey("BCId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.LossWasteFaults", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Entities.Shifts.LossWasteHeader", "LWHeader")
                        .WithMany("LWFault")
                        .HasForeignKey("LWHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.LossWasteJobCard", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Entities.Shifts.LossWasteFaults", "LossWaste")
                        .WithOne("LWJobCard")
                        .HasForeignKey("MMIS.DomainLayer.Entities.Shifts.LossWasteJobCard", "FaultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.ShiftAttendence", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Entities.Shifts.ShiftHeader", "shiftHeader")
                        .WithMany("shifAttendence")
                        .HasForeignKey("shiftHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Shifts.ShiftMeetingActions", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Entities.Shifts.ShiftHeader", "shiftHeader")
                        .WithMany("shiftMeeting")
                        .HasForeignKey("shiftHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Entities.Users.UserRoles", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Entities.Users.User", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId", "UserName");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Alcolyser", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Calibrations", "C")
                        .WithMany("Alcolyser")
                        .HasForeignKey("CId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Boiler", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Utilities", "UId")
                        .WithMany("Boilers")
                        .HasForeignKey("UIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Condenser", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Utilities", "UId")
                        .WithMany("Condenser")
                        .HasForeignKey("UIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.CoolingTower", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Utilities", "UId")
                        .WithMany("CoolingTower")
                        .HasForeignKey("UIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Effluent", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Utilities", "UId")
                        .WithMany("Effluent")
                        .HasForeignKey("UIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.FParameters", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Fermentation", "FId")
                        .WithMany("Parameters")
                        .HasForeignKey("FIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.FParametersScud", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Fermentation", "FId")
                        .WithMany("ScudParameters")
                        .HasForeignKey("FIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PHMeter", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Calibrations", "C")
                        .WithMany("pHMeter")
                        .HasForeignKey("CId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPBadClosures", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.PackagingInProgressScud", "PIP")
                        .WithMany("BadClosures")
                        .HasForeignKey("PIPId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPBrew", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.PackagingInProgress", "PIP")
                        .WithMany("Brews")
                        .HasForeignKey("PIPId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPBrewScud", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.PackagingInProgressScud", "PIP")
                        .WithMany("Brews")
                        .HasForeignKey("PIPId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPDamagedBottles", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.PackagingInProgressScud", "PIP")
                        .WithMany("DamagedBottles")
                        .HasForeignKey("PIPId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPMaterials", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.PackagingInProgress", "PIP")
                        .WithMany("Materials")
                        .HasForeignKey("PIPId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PIPMaterialsScud", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.PackagingInProgressScud", "PIP")
                        .WithMany("Materials")
                        .HasForeignKey("PIPId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PostChlorination", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Water", "Water")
                        .WithMany("PostChlorination")
                        .HasForeignKey("WaterId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.PostSandFiltration", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Water", "Water")
                        .WithMany("PostSandFiltration")
                        .HasForeignKey("WaterId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.RawWater", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Water", "Water")
                        .WithMany("RawWater")
                        .HasForeignKey("WaterId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Refractometer", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Calibrations", "C")
                        .WithMany("Refractometer")
                        .HasForeignKey("CId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Refridgeration", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Utilities", "UId")
                        .WithMany("Refridgeration")
                        .HasForeignKey("UIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.SLParameters", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Shelflife", "SL")
                        .WithMany("Parameters")
                        .HasForeignKey("SLId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Tester", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.TasteTest", "TT")
                        .WithMany("Testers")
                        .HasForeignKey("TTId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.TreatedWater", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Water", "Water")
                        .WithMany("TreatedWater")
                        .HasForeignKey("WaterId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Vessel", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Utilities", "UId")
                        .WithMany("Softner")
                        .HasForeignKey("UIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.Viscometer", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Calibrations", "C")
                        .WithMany("Viscometer")
                        .HasForeignKey("CId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.Quality.Entities.WaterTreatment", b =>
                {
                    b.HasOne("MMIS.DomainLayer.Quality.Entities.Utilities", "UId")
                        .WithMany("WaterTreatment")
                        .HasForeignKey("UIdId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.AffectedBodyPart", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentLogging", "IncidentLogging")
                        .WithMany("AffectedBodyPart")
                        .HasForeignKey("IncidentLoggingId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Documents", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentLogging", "IncidentLogging")
                        .WithMany("Documents")
                        .HasForeignKey("IncidentLoggingId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalImpactControls", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.EnvironmentalImpactRAHeader", "EnvironmentalImpactRAHeader")
                        .WithMany("EnvironmentalImpactControls")
                        .HasForeignKey("EnvironmentalImpactRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalImpactRequirements", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.EnvironmentalImpactRAHeader", "EnvironmentalImpactRAHeader")
                        .WithMany("EnvironmentalImpactRequirements")
                        .HasForeignKey("EnvironmentalImpactRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalIncidentDeviationFromVpo", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.EnvironmentalIncidentInvestigation", "EnvironmentalIncidentInvestigation")
                        .WithMany("EnvironmentalIncidentDeviationFromVpo")
                        .HasForeignKey("EnvironmentalIncidentInvestigationId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.EnvironmentalIncidentMedia", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.EnvironmentalIncident", "EnvironmentalIncident")
                        .WithMany("EnvironmentalIncidentMedia")
                        .HasForeignKey("EnvironmentalIncidentId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.FRAControls", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.FRAHeader", "FRAHeader")
                        .WithMany("FRAControls")
                        .HasForeignKey("FRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.FRAEquipments", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.FRAHeader", "FRAHeader")
                        .WithMany("FRAEquipments")
                        .HasForeignKey("FRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.FRARequirements", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.FRAHeader", "FRAHeader")
                        .WithMany("FRARequirements")
                        .HasForeignKey("FRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAAffectedPersons", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRAAffectedPersons")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAAssociatedRisk", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRAAssociatedRisk")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAClassification", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRAClassification")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAControls", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRAControls")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAEmergencyAction", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRAEmergencyAction")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAExposureRoute", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRAExposureRoute")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAHandlingControls", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRAHandlingControls")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRAImprovementSuggestion", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRAImprovementSuggestion")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRARequirements", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRARequirements")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.HRASubstancesProduced", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.HRAHeader", "HRAHeader")
                        .WithMany("HRASubstancesProduced")
                        .HasForeignKey("HRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentImmediateCauseConditions", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentCauses", "IncidentCauses")
                        .WithMany("IncidentImmediateCauseConditions")
                        .HasForeignKey("IncidentCausesId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigationDoneDifferent", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentInvestigation", "IncidentInvestigation")
                        .WithMany("IncidentInvestigationDoneDifferent")
                        .HasForeignKey("IncidentInvestigationId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigationPPEList", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentInvestigation", "IncidentInvestigation")
                        .WithMany("IncidentInvestigationPPEList")
                        .HasForeignKey("IncidentInvestigationId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigationSteps", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentInvestigation", "IncidentInvestigation")
                        .WithMany("IncidentInvestigationSteps")
                        .HasForeignKey("IncidentInvestigationId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentInvestigationToolCondition", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentInvestigation", "IncidentInvestigation")
                        .WithMany("IncidentInvestigationToolCondition")
                        .HasForeignKey("IncidentInvestigationId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentRootCauseActions", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentCauses", "IncidentCauses")
                        .WithMany("IncidentRootCauseActions")
                        .HasForeignKey("IncidentCausesId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentRootCauseConditions", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentCauses", "IncidentCauses")
                        .WithMany("IncidentRootCauseConditions")
                        .HasForeignKey("IncidentCausesId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IncidentWhys", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentCauses", "IncidentCauses")
                        .WithMany("IncidentWhys")
                        .HasForeignKey("IncidentCausesId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IssueBasedRAAuthorisations", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IssueBasedRAHeader", "IssueBasedRAHeader")
                        .WithMany("IssueBasedRAAuthorisations")
                        .HasForeignKey("IssueBasedRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IssueBasedRAItems", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IssueBasedRAHeader", "IssueBasedRAHeader")
                        .WithMany("IssueBasedRAItems")
                        .HasForeignKey("IssueBasedRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.IssueBasedRAMembers", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IssueBasedRAHeader", "IssueBasedRAHeader")
                        .WithMany("IssueBasedRAMembers")
                        .HasForeignKey("IssueBasedRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.JobTitle", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.InductionRequest", "InductionRequest")
                        .WithMany("JobTitle")
                        .HasForeignKey("InductionRequestId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.LegalOtherRequirements", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.LegalOtherHeader", "LegalOtherHeader")
                        .WithMany("LegalOtherRequirements")
                        .HasForeignKey("LegalOtherHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Medicals", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.MedicalData", "MedicalData")
                        .WithMany("Medicals")
                        .HasForeignKey("MedicalDataId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.NatureOfIllness", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentLogging", "IncidentLogging")
                        .WithMany("NatureOfIllness")
                        .HasForeignKey("IncidentLoggingId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.OccupationalControls", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.OccupationalHeader", "OccupationalHeader")
                        .WithMany("OccupationalControls")
                        .HasForeignKey("OccupationalHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.OccupationalRequirements", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.OccupationalHeader", "OccupationalHeader")
                        .WithMany("OccupationalRequirements")
                        .HasForeignKey("OccupationalHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAEquipment", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.PreTaskRAHeader", "PreTaskRAHeader")
                        .WithMany("PreTaskRAEquipment")
                        .HasForeignKey("PreTaskRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAHazards", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.PreTaskRAHeader", "PreTaskRAHeader")
                        .WithMany("PreTaskRAHazards")
                        .HasForeignKey("PreTaskRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAMembers", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.PreTaskRAHeader", "PreTaskRAHeader")
                        .WithMany("PreTaskRAMembers")
                        .HasForeignKey("PreTaskRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.PreTaskRAPermisions", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.PreTaskRAHeader", "PreTaskRAHeader")
                        .WithMany("PreTaskRAPermisions")
                        .HasForeignKey("PreTaskRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SDParameters", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.SustainableDevelopment", "SustainableDevelopment")
                        .WithMany("SDParameters")
                        .HasForeignKey("SustainableDevelopmentId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SHETargetItems", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.SHETargetsHeader", "SHETargetsHeader")
                        .WithMany("SHETargetItems")
                        .HasForeignKey("SHETargetsHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SRAControls", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.SRAHeader", "SRAHeader")
                        .WithMany("SRAControls")
                        .HasForeignKey("SRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SRARequirements", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.SRAHeader", "SRAHeader")
                        .WithMany("SRARequirements")
                        .HasForeignKey("SRAHeaderId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.SwmsTeam", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.SafeWorkMethod", "SafeWorkMethod")
                        .WithMany("SwmsTeam")
                        .HasForeignKey("SafeWorkMethodId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.TasksInvolved", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.SafeWorkMethod", "SafeWorkMethod")
                        .WithMany("TasksInvolved")
                        .HasForeignKey("SafeWorkMethodId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Trainings", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.TrainingMatrix", "TrainingMatrix")
                        .WithMany("Trainings")
                        .HasForeignKey("TrainingMatrixId");
                });

            modelBuilder.Entity("MMIS.DomainLayer.SHE.Entities.Witnesses", b =>
                {
                    b.HasOne("MMIS.DomainLayer.SHE.Entities.IncidentLogging", "IncidentLogging")
                        .WithMany("Witnesses")
                        .HasForeignKey("IncidentLoggingId");
                });
#pragma warning restore 612, 618
        }
    }
}
